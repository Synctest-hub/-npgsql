name: 3.0.0-ci.$(Date:yyyyMMdd).$(Rev:r) # equal to $(Build.BuildNumber)

variables:
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_SDK_VERSION: '3.0.100-preview5-011568'

resources:
  containers:
  - container: postgres_11
    image: mdillon/postgis:11
    options: "--name postgres"
    ports:
    - 5432:5432
  - container: postgres_10
    image: mdillon/postgis:10
    options: "--name postgres"
    ports:
    - 5432:5432
  - container: postgres_9_6
    image: mdillon/postgis:9.6
    options: "--name postgres"
    ports:
    - 5432:5432

jobs:

- job: Linux

  pool:
    vmImage: 'ubuntu-16.04'

  strategy:
    matrix:
      postgres_11:
        postgres_service: postgres_11
      postgres_10:
        postgres_service: postgres_10
      postgres_9_6:
        postgres_service: postgres_9_6

  services:
    postgres: $[variables['postgres_service']]

  steps:
  - bash: |
      export TRUNCATED_SHA1=${BUILD_SOURCEVERSION:0:9}
      echo "##vso[task.setvariable variable=truncated_sha1]$TRUNCATED_SHA1";
    displayName: 'Assign truncated SHA1 to environment variable'

  - bash: docker exec -t -u 0 postgres psql -U postgres -c "CREATE ROLE npgsql_tests SUPERUSER LOGIN PASSWORD 'npgsql_tests'"
    displayName: 'Setup PostgreSQL'

  - task: DotNetCoreInstaller@1
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: 'sdk'
      version: '$(DOTNET_SDK_VERSION)'

  - task: DotNetCoreCLI@2
    displayName: 'Test'
    inputs:
      command: 'test'
      configuration: 'Debug'
      projects: 'test/**/*.csproj'
      publishTestResults: true

  - task: DotNetCoreCLI@2
    displayName: 'Pack Nuget packages'
    inputs:
      buildProperties: 'Version=$(Build.BuildNumber)+sha.$(truncated_sha1)'
      command: 'pack'
      configuration: 'Release'
      includeSymbols: false
      outputDir: '$(Build.ArtifactStagingDirectory)'
      packagesToPack: 'src/**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Pack symbol packages'
    inputs:
      buildProperties: 'Version=$(Build.BuildNumber)+sha.$(truncated_sha1)'
      command: 'pack'
      configuration: 'Release'
      includeSymbols: true
      outputDir: '$(Build.ArtifactStagingDirectory)'
      packagesToPack: 'src/**/*.csproj'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'linux-build'

- job: Windows

  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - powershell: Write-Host "##vso[task.setvariable variable=truncated_sha1]$($env:BUILD_SOURCEVERSION.subString(0, 9))";
    displayName: 'Assign truncated SHA1 to environment variable'

  - powershell: .build/setup_postgres.ps1
    displayName: 'Start PostgreSQL'

  - task: DotNetCoreInstaller@1
    displayName: 'Install .NET Core SDK'
    inputs:
      packageType: 'sdk'
      version: '$(DOTNET_SDK_VERSION)'

  - task: DotNetCoreCLI@2
    displayName: 'Test'
    inputs:
      command: 'test'
      configuration: 'Debug'
      projects: 'test/**/*.csproj'
      publishTestResults: true

  - task: DotNetCoreCLI@2
    displayName: 'Pack Nuget packages'
    inputs:
      buildProperties: 'Version=$(Build.BuildNumber)+sha.$(truncated_sha1)'
      command: 'pack'
      configuration: 'Release'
      includeSymbols: false
      outputDir: '$(Build.ArtifactStagingDirectory)'
      packagesToPack: 'src/**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Pack symbol packages'
    inputs:
      buildProperties: 'Version=$(Build.BuildNumber)+sha.$(truncated_sha1)'
      command: 'pack'
      configuration: 'Release'
      includeSymbols: true
      outputDir: '$(Build.ArtifactStagingDirectory)'
      packagesToPack: 'src/**/*.csproj'

  - task: PublishBuildArtifacts@1
    displayName: 'Publish artifacts'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'windows-build'

  - task: NuGetToolInstaller@1 # TODO: needed because DotNetCoreCLI@2 doesn't support authenticated feeds yet. See: https://github.com/Microsoft/azure-pipelines-tasks/issues/7160
    displayName: 'Install NuGet CLI'
    inputs:
      versionSpec: '4.3.0'

  - task: NuGetCommand@2
    displayName: 'Publish to MyGet (unstable)'
    condition: succeeded()
    inputs:
      command: 'push'
      nuGetFeedType: 'external'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.snupkg'
      publishFeedCredentials: 'npgsql-unstable'

  - task: NuGetCommand@2
    displayName: 'Publish to MyGet (stable)'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'))
    inputs:
      command: 'push'
      nuGetFeedType: 'external'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.snupkg'
      publishFeedCredentials: 'npgsql-stable'
